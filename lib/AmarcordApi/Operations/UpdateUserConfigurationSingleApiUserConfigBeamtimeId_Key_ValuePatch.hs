-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation updateUserConfigurationSingleApiUserConfig_BeamtimeId__Key__Value_Patch
module AmarcordApi.Operations.UpdateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatch where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified AmarcordApi.Common
import AmarcordApi.Types

-- | > PATCH /api/user-config/{beamtimeId}/{key}/{value}
-- 
-- Update User Configuration Single
updateUserConfigurationSingleApiUserConfig_BeamtimeId__Key__Value_Patch :: forall m . AmarcordApi.Common.MonadHTTP m => UpdateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> AmarcordApi.Common.ClientT m (Network.HTTP.Client.Types.Response UpdateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchResponse) -- ^ Monadic computation which returns the result of the operation
updateUserConfigurationSingleApiUserConfig_BeamtimeId__Key__Value_Patch parameters = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either UpdateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> UpdateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
sonUserConfigurationSingleOutput)
                                                                                                                                                                                                                                                                                   | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 422) (Network.HTTP.Client.Types.responseStatus response) -> UpdateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchResponse422 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
alidationError)
                                                                                                                                                                                                                                                                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (AmarcordApi.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "PATCH") ("/api/user-config/" GHC.Base.<> (AmarcordApi.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (AmarcordApi.Common.textToByte GHC.Base.$ AmarcordApi.Common.stringifyModel (updateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParametersPathBeamtimeId parameters))) GHC.Base.<> ("/" GHC.Base.<> (AmarcordApi.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (AmarcordApi.Common.textToByte GHC.Base.$ AmarcordApi.Common.stringifyModel (updateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParametersPathKey parameters))) GHC.Base.<> ("/" GHC.Base.<> (AmarcordApi.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (AmarcordApi.Common.textToByte GHC.Base.$ AmarcordApi.Common.stringifyModel (updateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParametersPathValue parameters))) GHC.Base.<> "")))))) GHC.Base.mempty)
-- | Defines the object schema located at @paths.\/api\/user-config\/{beamtimeId}\/{key}\/{value}.PATCH.parameters@ in the specification.
-- 
-- 
data UpdateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParameters = UpdateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParameters {
  -- | pathBeamtimeId: Represents the parameter named \'beamtimeId\'
  updateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParametersPathBeamtimeId :: GHC.Types.Int
  -- | pathKey: Represents the parameter named \'key\'
  , updateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParametersPathKey :: Data.Text.Internal.Text
  -- | pathValue: Represents the parameter named \'value\'
  , updateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParametersPathValue :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON UpdateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParameters
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["pathBeamtimeId" Data.Aeson.Types.ToJSON..= updateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParametersPathBeamtimeId obj] : ["pathKey" Data.Aeson.Types.ToJSON..= updateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParametersPathKey obj] : ["pathValue" Data.Aeson.Types.ToJSON..= updateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParametersPathValue obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["pathBeamtimeId" Data.Aeson.Types.ToJSON..= updateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParametersPathBeamtimeId obj] : ["pathKey" Data.Aeson.Types.ToJSON..= updateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParametersPathKey obj] : ["pathValue" Data.Aeson.Types.ToJSON..= updateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParametersPathValue obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON UpdateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParameters
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "UpdateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParameters" (\obj -> ((GHC.Base.pure UpdateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathBeamtimeId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathKey")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathValue"))}
-- | Create a new 'UpdateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParameters' with all required fields.
mkUpdateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParameters :: GHC.Types.Int -- ^ 'updateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParametersPathBeamtimeId'
  -> Data.Text.Internal.Text -- ^ 'updateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParametersPathKey'
  -> Data.Text.Internal.Text -- ^ 'updateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParametersPathValue'
  -> UpdateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParameters
mkUpdateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParameters updateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParametersPathBeamtimeId updateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParametersPathKey updateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParametersPathValue = UpdateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParameters{updateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParametersPathBeamtimeId = updateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParametersPathBeamtimeId,
                                                                                                                                                                                                                                                                                                                                                                                                                                        updateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParametersPathKey = updateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParametersPathKey,
                                                                                                                                                                                                                                                                                                                                                                                                                                        updateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParametersPathValue = updateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchParametersPathValue}
-- | Represents a response of the operation 'updateUserConfigurationSingleApiUserConfig_BeamtimeId__Key__Value_Patch'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'UpdateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchResponseError' is used.
data UpdateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchResponse =
   UpdateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | UpdateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchResponse200 JsonUserConfigurationSingleOutput -- ^ Successful Response
  | UpdateUserConfigurationSingleApiUserConfigBeamtimeId_Key_ValuePatchResponse422 HTTPValidationError -- ^ Validation Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
