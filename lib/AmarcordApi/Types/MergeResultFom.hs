-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema MergeResultFom
module AmarcordApi.Types.MergeResultFom where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified AmarcordApi.Common
import AmarcordApi.TypeAlias
import {-# SOURCE #-} AmarcordApi.Types.MergeResultOuterShell

-- | Defines the object schema located at @components.schemas.MergeResultFom@ in the specification.
-- 
-- 
data MergeResultFom = MergeResultFom {
  -- | cc
  mergeResultFomCc :: GHC.Types.Double
  -- | ccano
  , mergeResultFomCcano :: (GHC.Maybe.Maybe GHC.Types.Double)
  -- | ccstar
  , mergeResultFomCcstar :: GHC.Types.Double
  -- | completeness
  , mergeResultFomCompleteness :: GHC.Types.Double
  -- | crdano
  , mergeResultFomCrdano :: (GHC.Maybe.Maybe GHC.Types.Double)
  -- | d1sig
  , mergeResultFomD1sig :: GHC.Types.Double
  -- | d2sig
  , mergeResultFomD2sig :: GHC.Types.Double
  -- | discarded_reflections
  , mergeResultFomDiscardedReflections :: GHC.Types.Int
  -- | ln_k
  , mergeResultFomLnK :: (GHC.Maybe.Maybe GHC.Types.Double)
  -- | measurements_total
  , mergeResultFomMeasurementsTotal :: GHC.Types.Int
  -- | one_over_d_from
  , mergeResultFomOneOverDFrom :: GHC.Types.Double
  -- | one_over_d_to
  , mergeResultFomOneOverDTo :: GHC.Types.Double
  -- | outer_shell
  , mergeResultFomOuterShell :: MergeResultOuterShell
  -- | r1i
  , mergeResultFomR1i :: GHC.Types.Double
  -- | r2
  , mergeResultFomR2 :: GHC.Types.Double
  -- | r_split
  , mergeResultFomRSplit :: GHC.Types.Double
  -- | rano
  , mergeResultFomRano :: (GHC.Maybe.Maybe GHC.Types.Double)
  -- | rano_over_r_split
  , mergeResultFomRanoOverRSplit :: (GHC.Maybe.Maybe GHC.Types.Double)
  -- | redundancy
  , mergeResultFomRedundancy :: GHC.Types.Double
  -- | reflections_possible
  , mergeResultFomReflectionsPossible :: GHC.Types.Int
  -- | reflections_total
  , mergeResultFomReflectionsTotal :: GHC.Types.Int
  -- | snr
  , mergeResultFomSnr :: GHC.Types.Double
  -- | wilson
  , mergeResultFomWilson :: (GHC.Maybe.Maybe GHC.Types.Double)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON MergeResultFom
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["cc" Data.Aeson.Types.ToJSON..= mergeResultFomCc obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ccano" Data.Aeson.Types.ToJSON..=)) (mergeResultFomCcano obj) : ["ccstar" Data.Aeson.Types.ToJSON..= mergeResultFomCcstar obj] : ["completeness" Data.Aeson.Types.ToJSON..= mergeResultFomCompleteness obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("crdano" Data.Aeson.Types.ToJSON..=)) (mergeResultFomCrdano obj) : ["d1sig" Data.Aeson.Types.ToJSON..= mergeResultFomD1sig obj] : ["d2sig" Data.Aeson.Types.ToJSON..= mergeResultFomD2sig obj] : ["discarded_reflections" Data.Aeson.Types.ToJSON..= mergeResultFomDiscardedReflections obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ln_k" Data.Aeson.Types.ToJSON..=)) (mergeResultFomLnK obj) : ["measurements_total" Data.Aeson.Types.ToJSON..= mergeResultFomMeasurementsTotal obj] : ["one_over_d_from" Data.Aeson.Types.ToJSON..= mergeResultFomOneOverDFrom obj] : ["one_over_d_to" Data.Aeson.Types.ToJSON..= mergeResultFomOneOverDTo obj] : ["outer_shell" Data.Aeson.Types.ToJSON..= mergeResultFomOuterShell obj] : ["r1i" Data.Aeson.Types.ToJSON..= mergeResultFomR1i obj] : ["r2" Data.Aeson.Types.ToJSON..= mergeResultFomR2 obj] : ["r_split" Data.Aeson.Types.ToJSON..= mergeResultFomRSplit obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("rano" Data.Aeson.Types.ToJSON..=)) (mergeResultFomRano obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("rano_over_r_split" Data.Aeson.Types.ToJSON..=)) (mergeResultFomRanoOverRSplit obj) : ["redundancy" Data.Aeson.Types.ToJSON..= mergeResultFomRedundancy obj] : ["reflections_possible" Data.Aeson.Types.ToJSON..= mergeResultFomReflectionsPossible obj] : ["reflections_total" Data.Aeson.Types.ToJSON..= mergeResultFomReflectionsTotal obj] : ["snr" Data.Aeson.Types.ToJSON..= mergeResultFomSnr obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("wilson" Data.Aeson.Types.ToJSON..=)) (mergeResultFomWilson obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["cc" Data.Aeson.Types.ToJSON..= mergeResultFomCc obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ccano" Data.Aeson.Types.ToJSON..=)) (mergeResultFomCcano obj) : ["ccstar" Data.Aeson.Types.ToJSON..= mergeResultFomCcstar obj] : ["completeness" Data.Aeson.Types.ToJSON..= mergeResultFomCompleteness obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("crdano" Data.Aeson.Types.ToJSON..=)) (mergeResultFomCrdano obj) : ["d1sig" Data.Aeson.Types.ToJSON..= mergeResultFomD1sig obj] : ["d2sig" Data.Aeson.Types.ToJSON..= mergeResultFomD2sig obj] : ["discarded_reflections" Data.Aeson.Types.ToJSON..= mergeResultFomDiscardedReflections obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ln_k" Data.Aeson.Types.ToJSON..=)) (mergeResultFomLnK obj) : ["measurements_total" Data.Aeson.Types.ToJSON..= mergeResultFomMeasurementsTotal obj] : ["one_over_d_from" Data.Aeson.Types.ToJSON..= mergeResultFomOneOverDFrom obj] : ["one_over_d_to" Data.Aeson.Types.ToJSON..= mergeResultFomOneOverDTo obj] : ["outer_shell" Data.Aeson.Types.ToJSON..= mergeResultFomOuterShell obj] : ["r1i" Data.Aeson.Types.ToJSON..= mergeResultFomR1i obj] : ["r2" Data.Aeson.Types.ToJSON..= mergeResultFomR2 obj] : ["r_split" Data.Aeson.Types.ToJSON..= mergeResultFomRSplit obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("rano" Data.Aeson.Types.ToJSON..=)) (mergeResultFomRano obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("rano_over_r_split" Data.Aeson.Types.ToJSON..=)) (mergeResultFomRanoOverRSplit obj) : ["redundancy" Data.Aeson.Types.ToJSON..= mergeResultFomRedundancy obj] : ["reflections_possible" Data.Aeson.Types.ToJSON..= mergeResultFomReflectionsPossible obj] : ["reflections_total" Data.Aeson.Types.ToJSON..= mergeResultFomReflectionsTotal obj] : ["snr" Data.Aeson.Types.ToJSON..= mergeResultFomSnr obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("wilson" Data.Aeson.Types.ToJSON..=)) (mergeResultFomWilson obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON MergeResultFom
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "MergeResultFom" (\obj -> ((((((((((((((((((((((GHC.Base.pure MergeResultFom GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "cc")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ccano")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "ccstar")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "completeness")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "crdano")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "d1sig")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "d2sig")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "discarded_reflections")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ln_k")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "measurements_total")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "one_over_d_from")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "one_over_d_to")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "outer_shell")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "r1i")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "r2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "r_split")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "rano")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "rano_over_r_split")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "redundancy")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "reflections_possible")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "reflections_total")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "snr")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "wilson"))}
-- | Create a new 'MergeResultFom' with all required fields.
mkMergeResultFom :: GHC.Types.Double -- ^ 'mergeResultFomCc'
  -> GHC.Types.Double -- ^ 'mergeResultFomCcstar'
  -> GHC.Types.Double -- ^ 'mergeResultFomCompleteness'
  -> GHC.Types.Double -- ^ 'mergeResultFomD1sig'
  -> GHC.Types.Double -- ^ 'mergeResultFomD2sig'
  -> GHC.Types.Int -- ^ 'mergeResultFomDiscardedReflections'
  -> GHC.Types.Int -- ^ 'mergeResultFomMeasurementsTotal'
  -> GHC.Types.Double -- ^ 'mergeResultFomOneOverDFrom'
  -> GHC.Types.Double -- ^ 'mergeResultFomOneOverDTo'
  -> MergeResultOuterShell -- ^ 'mergeResultFomOuterShell'
  -> GHC.Types.Double -- ^ 'mergeResultFomR1i'
  -> GHC.Types.Double -- ^ 'mergeResultFomR2'
  -> GHC.Types.Double -- ^ 'mergeResultFomRSplit'
  -> GHC.Types.Double -- ^ 'mergeResultFomRedundancy'
  -> GHC.Types.Int -- ^ 'mergeResultFomReflectionsPossible'
  -> GHC.Types.Int -- ^ 'mergeResultFomReflectionsTotal'
  -> GHC.Types.Double -- ^ 'mergeResultFomSnr'
  -> MergeResultFom
mkMergeResultFom mergeResultFomCc mergeResultFomCcstar mergeResultFomCompleteness mergeResultFomD1sig mergeResultFomD2sig mergeResultFomDiscardedReflections mergeResultFomMeasurementsTotal mergeResultFomOneOverDFrom mergeResultFomOneOverDTo mergeResultFomOuterShell mergeResultFomR1i mergeResultFomR2 mergeResultFomRSplit mergeResultFomRedundancy mergeResultFomReflectionsPossible mergeResultFomReflectionsTotal mergeResultFomSnr = MergeResultFom{mergeResultFomCc = mergeResultFomCc,
                                                                                                                                                                                                                                                                                                                                                                                                                                                               mergeResultFomCcano = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                                                                                                                               mergeResultFomCcstar = mergeResultFomCcstar,
                                                                                                                                                                                                                                                                                                                                                                                                                                                               mergeResultFomCompleteness = mergeResultFomCompleteness,
                                                                                                                                                                                                                                                                                                                                                                                                                                                               mergeResultFomCrdano = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                                                                                                                               mergeResultFomD1sig = mergeResultFomD1sig,
                                                                                                                                                                                                                                                                                                                                                                                                                                                               mergeResultFomD2sig = mergeResultFomD2sig,
                                                                                                                                                                                                                                                                                                                                                                                                                                                               mergeResultFomDiscardedReflections = mergeResultFomDiscardedReflections,
                                                                                                                                                                                                                                                                                                                                                                                                                                                               mergeResultFomLnK = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                                                                                                                               mergeResultFomMeasurementsTotal = mergeResultFomMeasurementsTotal,
                                                                                                                                                                                                                                                                                                                                                                                                                                                               mergeResultFomOneOverDFrom = mergeResultFomOneOverDFrom,
                                                                                                                                                                                                                                                                                                                                                                                                                                                               mergeResultFomOneOverDTo = mergeResultFomOneOverDTo,
                                                                                                                                                                                                                                                                                                                                                                                                                                                               mergeResultFomOuterShell = mergeResultFomOuterShell,
                                                                                                                                                                                                                                                                                                                                                                                                                                                               mergeResultFomR1i = mergeResultFomR1i,
                                                                                                                                                                                                                                                                                                                                                                                                                                                               mergeResultFomR2 = mergeResultFomR2,
                                                                                                                                                                                                                                                                                                                                                                                                                                                               mergeResultFomRSplit = mergeResultFomRSplit,
                                                                                                                                                                                                                                                                                                                                                                                                                                                               mergeResultFomRano = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                                                                                                                               mergeResultFomRanoOverRSplit = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                                                                                                                               mergeResultFomRedundancy = mergeResultFomRedundancy,
                                                                                                                                                                                                                                                                                                                                                                                                                                                               mergeResultFomReflectionsPossible = mergeResultFomReflectionsPossible,
                                                                                                                                                                                                                                                                                                                                                                                                                                                               mergeResultFomReflectionsTotal = mergeResultFomReflectionsTotal,
                                                                                                                                                                                                                                                                                                                                                                                                                                                               mergeResultFomSnr = mergeResultFomSnr,
                                                                                                                                                                                                                                                                                                                                                                                                                                                               mergeResultFomWilson = GHC.Maybe.Nothing}
