-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema JsonRunAnalysisIndexingResult
module AmarcordApi.Types.JsonRunAnalysisIndexingResult where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified AmarcordApi.Common
import AmarcordApi.TypeAlias
import {-# SOURCE #-} AmarcordApi.Types.JsonIndexingFom
import {-# SOURCE #-} AmarcordApi.Types.JsonIndexingStatistic

-- | Defines the object schema located at @components.schemas.JsonRunAnalysisIndexingResult@ in the specification.
-- 
-- 
data JsonRunAnalysisIndexingResult = JsonRunAnalysisIndexingResult {
  -- | foms
  jsonRunAnalysisIndexingResultFoms :: ([JsonIndexingFom])
  -- | indexing_statistics
  , jsonRunAnalysisIndexingResultIndexingStatistics :: ([JsonIndexingStatistic])
  -- | run_id
  , jsonRunAnalysisIndexingResultRunId :: GHC.Types.Int
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON JsonRunAnalysisIndexingResult
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["foms" Data.Aeson.Types.ToJSON..= jsonRunAnalysisIndexingResultFoms obj] : ["indexing_statistics" Data.Aeson.Types.ToJSON..= jsonRunAnalysisIndexingResultIndexingStatistics obj] : ["run_id" Data.Aeson.Types.ToJSON..= jsonRunAnalysisIndexingResultRunId obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["foms" Data.Aeson.Types.ToJSON..= jsonRunAnalysisIndexingResultFoms obj] : ["indexing_statistics" Data.Aeson.Types.ToJSON..= jsonRunAnalysisIndexingResultIndexingStatistics obj] : ["run_id" Data.Aeson.Types.ToJSON..= jsonRunAnalysisIndexingResultRunId obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON JsonRunAnalysisIndexingResult
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "JsonRunAnalysisIndexingResult" (\obj -> ((GHC.Base.pure JsonRunAnalysisIndexingResult GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "foms")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "indexing_statistics")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "run_id"))}
-- | Create a new 'JsonRunAnalysisIndexingResult' with all required fields.
mkJsonRunAnalysisIndexingResult :: [JsonIndexingFom] -- ^ 'jsonRunAnalysisIndexingResultFoms'
  -> [JsonIndexingStatistic] -- ^ 'jsonRunAnalysisIndexingResultIndexingStatistics'
  -> GHC.Types.Int -- ^ 'jsonRunAnalysisIndexingResultRunId'
  -> JsonRunAnalysisIndexingResult
mkJsonRunAnalysisIndexingResult jsonRunAnalysisIndexingResultFoms jsonRunAnalysisIndexingResultIndexingStatistics jsonRunAnalysisIndexingResultRunId = JsonRunAnalysisIndexingResult{jsonRunAnalysisIndexingResultFoms = jsonRunAnalysisIndexingResultFoms,
                                                                                                                                                                                     jsonRunAnalysisIndexingResultIndexingStatistics = jsonRunAnalysisIndexingResultIndexingStatistics,
                                                                                                                                                                                     jsonRunAnalysisIndexingResultRunId = jsonRunAnalysisIndexingResultRunId}
