-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema JsonIndexingResult
module AmarcordApi.Types.JsonIndexingResult where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified AmarcordApi.Common
import AmarcordApi.TypeAlias

-- | Defines the object schema located at @components.schemas.JsonIndexingResult@ in the specification.
-- 
-- 
data JsonIndexingResult = JsonIndexingResult {
  -- | detector_shift_x_mm
  jsonIndexingResultDetectorShiftXMm :: (GHC.Maybe.Maybe GHC.Types.Double)
  -- | detector_shift_y_mm
  , jsonIndexingResultDetectorShiftYMm :: (GHC.Maybe.Maybe GHC.Types.Double)
  -- | done
  , jsonIndexingResultDone :: GHC.Types.Bool
  -- | frames
  , jsonIndexingResultFrames :: GHC.Types.Int
  -- | hits
  , jsonIndexingResultHits :: GHC.Types.Int
  -- | indexed_crystals
  , jsonIndexingResultIndexedCrystals :: GHC.Types.Int
  -- | indexed_frames
  , jsonIndexingResultIndexedFrames :: GHC.Types.Int
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON JsonIndexingResult
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("detector_shift_x_mm" Data.Aeson.Types.ToJSON..=)) (jsonIndexingResultDetectorShiftXMm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("detector_shift_y_mm" Data.Aeson.Types.ToJSON..=)) (jsonIndexingResultDetectorShiftYMm obj) : ["done" Data.Aeson.Types.ToJSON..= jsonIndexingResultDone obj] : ["frames" Data.Aeson.Types.ToJSON..= jsonIndexingResultFrames obj] : ["hits" Data.Aeson.Types.ToJSON..= jsonIndexingResultHits obj] : ["indexed_crystals" Data.Aeson.Types.ToJSON..= jsonIndexingResultIndexedCrystals obj] : ["indexed_frames" Data.Aeson.Types.ToJSON..= jsonIndexingResultIndexedFrames obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("detector_shift_x_mm" Data.Aeson.Types.ToJSON..=)) (jsonIndexingResultDetectorShiftXMm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("detector_shift_y_mm" Data.Aeson.Types.ToJSON..=)) (jsonIndexingResultDetectorShiftYMm obj) : ["done" Data.Aeson.Types.ToJSON..= jsonIndexingResultDone obj] : ["frames" Data.Aeson.Types.ToJSON..= jsonIndexingResultFrames obj] : ["hits" Data.Aeson.Types.ToJSON..= jsonIndexingResultHits obj] : ["indexed_crystals" Data.Aeson.Types.ToJSON..= jsonIndexingResultIndexedCrystals obj] : ["indexed_frames" Data.Aeson.Types.ToJSON..= jsonIndexingResultIndexedFrames obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON JsonIndexingResult
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "JsonIndexingResult" (\obj -> ((((((GHC.Base.pure JsonIndexingResult GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "detector_shift_x_mm")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "detector_shift_y_mm")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "done")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "frames")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "hits")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "indexed_crystals")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "indexed_frames"))}
-- | Create a new 'JsonIndexingResult' with all required fields.
mkJsonIndexingResult :: GHC.Types.Bool -- ^ 'jsonIndexingResultDone'
  -> GHC.Types.Int -- ^ 'jsonIndexingResultFrames'
  -> GHC.Types.Int -- ^ 'jsonIndexingResultHits'
  -> GHC.Types.Int -- ^ 'jsonIndexingResultIndexedCrystals'
  -> GHC.Types.Int -- ^ 'jsonIndexingResultIndexedFrames'
  -> JsonIndexingResult
mkJsonIndexingResult jsonIndexingResultDone jsonIndexingResultFrames jsonIndexingResultHits jsonIndexingResultIndexedCrystals jsonIndexingResultIndexedFrames = JsonIndexingResult{jsonIndexingResultDetectorShiftXMm = GHC.Maybe.Nothing,
                                                                                                                                                                                   jsonIndexingResultDetectorShiftYMm = GHC.Maybe.Nothing,
                                                                                                                                                                                   jsonIndexingResultDone = jsonIndexingResultDone,
                                                                                                                                                                                   jsonIndexingResultFrames = jsonIndexingResultFrames,
                                                                                                                                                                                   jsonIndexingResultHits = jsonIndexingResultHits,
                                                                                                                                                                                   jsonIndexingResultIndexedCrystals = jsonIndexingResultIndexedCrystals,
                                                                                                                                                                                   jsonIndexingResultIndexedFrames = jsonIndexingResultIndexedFrames}
