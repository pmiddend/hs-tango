-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema JsonCreateAttributoInput
module AmarcordApi.Types.JsonCreateAttributoInput where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified AmarcordApi.Common
import AmarcordApi.TypeAlias
import {-# SOURCE #-} AmarcordApi.Types.AssociatedTable
import {-# SOURCE #-} AmarcordApi.Types.JSONSchemaArray
import {-# SOURCE #-} AmarcordApi.Types.JSONSchemaBoolean
import {-# SOURCE #-} AmarcordApi.Types.JSONSchemaInteger
import {-# SOURCE #-} AmarcordApi.Types.JSONSchemaNumber
import {-# SOURCE #-} AmarcordApi.Types.JSONSchemaString

-- | Defines the object schema located at @components.schemas.JsonCreateAttributoInput@ in the specification.
-- 
-- 
data JsonCreateAttributoInput = JsonCreateAttributoInput {
  -- | associated_table: An enumeration.
  jsonCreateAttributoInputAssociatedTable :: AssociatedTable
  -- | attributo_type_array
  , jsonCreateAttributoInputAttributoTypeArray :: (GHC.Maybe.Maybe JSONSchemaArray)
  -- | attributo_type_boolean
  , jsonCreateAttributoInputAttributoTypeBoolean :: (GHC.Maybe.Maybe JSONSchemaBoolean)
  -- | attributo_type_integer
  , jsonCreateAttributoInputAttributoTypeInteger :: (GHC.Maybe.Maybe JSONSchemaInteger)
  -- | attributo_type_number
  , jsonCreateAttributoInputAttributoTypeNumber :: (GHC.Maybe.Maybe JSONSchemaNumber)
  -- | attributo_type_string
  , jsonCreateAttributoInputAttributoTypeString :: (GHC.Maybe.Maybe JSONSchemaString)
  -- | beamtime_id
  , jsonCreateAttributoInputBeamtimeId :: GHC.Types.Int
  -- | description
  , jsonCreateAttributoInputDescription :: Data.Text.Internal.Text
  -- | group
  , jsonCreateAttributoInputGroup :: Data.Text.Internal.Text
  -- | name
  , jsonCreateAttributoInputName :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON JsonCreateAttributoInput
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["associated_table" Data.Aeson.Types.ToJSON..= jsonCreateAttributoInputAssociatedTable obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("attributo_type_array" Data.Aeson.Types.ToJSON..=)) (jsonCreateAttributoInputAttributoTypeArray obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("attributo_type_boolean" Data.Aeson.Types.ToJSON..=)) (jsonCreateAttributoInputAttributoTypeBoolean obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("attributo_type_integer" Data.Aeson.Types.ToJSON..=)) (jsonCreateAttributoInputAttributoTypeInteger obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("attributo_type_number" Data.Aeson.Types.ToJSON..=)) (jsonCreateAttributoInputAttributoTypeNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("attributo_type_string" Data.Aeson.Types.ToJSON..=)) (jsonCreateAttributoInputAttributoTypeString obj) : ["beamtime_id" Data.Aeson.Types.ToJSON..= jsonCreateAttributoInputBeamtimeId obj] : ["description" Data.Aeson.Types.ToJSON..= jsonCreateAttributoInputDescription obj] : ["group" Data.Aeson.Types.ToJSON..= jsonCreateAttributoInputGroup obj] : ["name" Data.Aeson.Types.ToJSON..= jsonCreateAttributoInputName obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["associated_table" Data.Aeson.Types.ToJSON..= jsonCreateAttributoInputAssociatedTable obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("attributo_type_array" Data.Aeson.Types.ToJSON..=)) (jsonCreateAttributoInputAttributoTypeArray obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("attributo_type_boolean" Data.Aeson.Types.ToJSON..=)) (jsonCreateAttributoInputAttributoTypeBoolean obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("attributo_type_integer" Data.Aeson.Types.ToJSON..=)) (jsonCreateAttributoInputAttributoTypeInteger obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("attributo_type_number" Data.Aeson.Types.ToJSON..=)) (jsonCreateAttributoInputAttributoTypeNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("attributo_type_string" Data.Aeson.Types.ToJSON..=)) (jsonCreateAttributoInputAttributoTypeString obj) : ["beamtime_id" Data.Aeson.Types.ToJSON..= jsonCreateAttributoInputBeamtimeId obj] : ["description" Data.Aeson.Types.ToJSON..= jsonCreateAttributoInputDescription obj] : ["group" Data.Aeson.Types.ToJSON..= jsonCreateAttributoInputGroup obj] : ["name" Data.Aeson.Types.ToJSON..= jsonCreateAttributoInputName obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON JsonCreateAttributoInput
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "JsonCreateAttributoInput" (\obj -> (((((((((GHC.Base.pure JsonCreateAttributoInput GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "associated_table")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "attributo_type_array")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "attributo_type_boolean")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "attributo_type_integer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "attributo_type_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "attributo_type_string")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "beamtime_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "group")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name"))}
-- | Create a new 'JsonCreateAttributoInput' with all required fields.
mkJsonCreateAttributoInput :: AssociatedTable -- ^ 'jsonCreateAttributoInputAssociatedTable'
  -> GHC.Types.Int -- ^ 'jsonCreateAttributoInputBeamtimeId'
  -> Data.Text.Internal.Text -- ^ 'jsonCreateAttributoInputDescription'
  -> Data.Text.Internal.Text -- ^ 'jsonCreateAttributoInputGroup'
  -> Data.Text.Internal.Text -- ^ 'jsonCreateAttributoInputName'
  -> JsonCreateAttributoInput
mkJsonCreateAttributoInput jsonCreateAttributoInputAssociatedTable jsonCreateAttributoInputBeamtimeId jsonCreateAttributoInputDescription jsonCreateAttributoInputGroup jsonCreateAttributoInputName = JsonCreateAttributoInput{jsonCreateAttributoInputAssociatedTable = jsonCreateAttributoInputAssociatedTable,
                                                                                                                                                                                                                                jsonCreateAttributoInputAttributoTypeArray = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                jsonCreateAttributoInputAttributoTypeBoolean = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                jsonCreateAttributoInputAttributoTypeInteger = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                jsonCreateAttributoInputAttributoTypeNumber = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                jsonCreateAttributoInputAttributoTypeString = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                jsonCreateAttributoInputBeamtimeId = jsonCreateAttributoInputBeamtimeId,
                                                                                                                                                                                                                                jsonCreateAttributoInputDescription = jsonCreateAttributoInputDescription,
                                                                                                                                                                                                                                jsonCreateAttributoInputGroup = jsonCreateAttributoInputGroup,
                                                                                                                                                                                                                                jsonCreateAttributoInputName = jsonCreateAttributoInputName}
